// В этой задаче необходимо реализовать авторизацию с использованием библиотеки jwtauth из go-chi.
// Потребуется  создать  две конечных  точки:  /api/login и  /api/register — которые будут отвечать за  процессы
// входа и регистрации соответственно.
// В   качестве   сервиса   используй   геосервис   из   предыдущего   задания.   При   обращении   к   эндпоинтам
// /api/address/search и /api/address/geocode должна происходить проверка токена. Если токен валидный, то
// запрос должен быть обработан, если нет, то должен возвращаться статус код 403.
// При  регистрации  пользователя    храни  его  в  памяти.  При  входе  пользователя  проверяй,  что  пользователь
// существует и пароль совпадает с тем, что был указан при регистрации.
// Если пользователь не существует
// или пароль не совпадает, то возвращай статус код 200 и описание ошибки в теле ответа.

package main

import (
	"log"

	"auth/internal"
)

func main() {
	server := internal.NewServer(internal.NewRouter())
	log.Fatal(server.Start())
}
